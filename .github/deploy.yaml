name: Deploy PGQD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'k8s/deployment.yaml'  # Update if your path differs

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to Non-Prod Kubernetes Cluster
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${KUBE_CONFIG}" > ~/.kube/config
          chmod 600 ~/.kube/config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy PGQD Deployment Manifest
        run: |
          kubectl apply -f k8s/deployment.yaml
          
      - name: Get Conjur secrets
        uses: cisco/conjur-secrets-action@v1
        with:
         conjur_url: https://conjur-prod.cisco.com
          secrets:
  #       SECRET_MANAGER_USERNAME: ${{ secrets.CONJUR_HOST_PRIV_ID }}
  #       SECRET_MANAGER_PASSWORD: ${{ secrets.CONJUR_HOST_PRIV_KEY }}
  #     with:
  #       secret_manager: conjur
  #       secret_manager_url: https://conjur-prod.cisco.com
  #       secret_map: |
  #         sto/sro-csco-github-actions/github-action-org-secrets/artifactory-pgqd-docker-pull-secret/pgqd-secret,

      - name: Deploy PGQD using Helm on OpenShift
        run: |
         helm upgrade --install pgqd ./charts/pgqd \
            --namespace psirt-pgqd-non-prod \
            --create-namespace \
            --set image.repository=artifactory.devhub-cloud.cisco.com/pgqd-docker \
            --set image.tag=3.3-almalinux9-v0.0.21
        env:
          CONJUR_SECRET: ${{ steps.conjur_secrets.outputs.SECRET_VALUE }}

      - name: Verify Deployment Status on OpenShift
        run: |
          oc rollout status deployment/pgqd -n psirt-pgqd-non-prod
          echo "Deployment verified successfully."

      - name: Notify Deployment Success
        if: success()
        run: |
          echo "PGQD deployment was successful in namespace psirt-pgqd-non-prod."
          curl -X POST -H 'Content-type: application/json' --data '{"text":"PGQD deployment was successful."}' <WEBHOOK_URL>

      - name: Notify Deployment Failure
        if: failure()
        run: |
          echo "PGQD deployment failed in namespace psirt-pgqd-non-prod."
          curl -X POST -H 'Content-type: application/json' --data '{"text":"PGQD deployment failed."}' <WEBHOOK_URL>

      - name: Post-deployment clean up
        if: always()
        run: |
          echo "Post-deployment cleanup started."
          oc delete deployment pgqd -n psirt-pgqd-non-prod || true
          oc delete secret pgqd-dev-secrets -n psirt-pgqd-non-prod || true
          oc delete namespace psirt-pgqd-non-prod || true
          echo "Post-deployment cleanup completed successfully."
