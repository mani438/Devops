# This is a basic workflow to help you get started with Actions

name: CIname: Deploy PGQD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build PGQD"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.29.0

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Refresh imagePullSecret
        run: |
          kubectl create secret docker-registry artifactory-pgqd-docker-pull-secret \
            --docker-server=artifactory.devhub-cloud.cisco.com \
            --docker-username=${{ secrets.ARTIFACTORY_USER }} \
            --docker-password=${{ secrets.ARTIFACTORY_TOKEN }} \
            --namespace=default \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy PGQD
        run: |
          IMAGE="${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.image }}"
          echo "Deploying $IMAGE ..."
          kubectl set image deployment/pgqd pgqd=$IMAGE --namespace=default
          kubectl rollout status deployment/pgqd --namespace=default

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
