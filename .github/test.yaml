name: Deploy PGQD on OpenShift

on:
  push:
    branches: [ main, 5-helm-chart-for-pgqd ]
  pull_request:
    branches: [ main, 5-helm-chart-for-pgqd ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy-pgqd:
    runs-on: ubuntu-22.04
    name: Deploy PGQD
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Install oc CLI
        run: |
          curl -LO "https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz"
          echo "SHA256 CHECKING..."
          echo "your_expected_sha256_hash  oc.tar.gz" | sha256sum -c -
          tar -xvf oc.tar.gz
          sudo mv oc /usr/local/bin/

      - name: Fetch Secrets from Conjur
        run: |
          # Install conjur CLI
          pip install conjur-client

          # Login to Conjur
          conjur init -u ${{ secrets.CONJUR_APPLIANCE_URL }} -a ${{ secrets.CONJUR_ACCOUNT }}
          conjur authn login -u ${{ secrets.CONJUR_USERNAME }} -p ${{ secrets.CONJUR_API_KEY }}

          # Fetch secrets and export as env vars
          export OPENSHIFT_TOKEN=$(conjur variable get -i openshift/pgqd/token)
          export OPENSHIFT_SERVER=$(conjur variable get -i openshift/pgqd/server)
        shell: bash

      - name: Authenticate to OpenShift
        run: |
          oc login --token="$OPENSHIFT_TOKEN" --server="$OPENSHIFT_SERVER"

      - name: Helm Lint & Dry run
        run: |
          helm lint helm/pgqd
          helm template pgqd helm/pgqd --debug

      - name: Deploy PGQD using Helm
        run: |
          helm upgrade --install pgqd helm/pgqd --namespace pgqd --create-namespace

      - name: Verify Deployment Rollout
        run: |
          oc rollout status deployment/pgqd -n pgqd --timeout=60s

      - name: Verify Pod Status
        run: |
          oc get pods -n pgqd

      - name: Deployment Success Notification
        run: echo "✅ PGQD deployed successfully!"

    continue-on-error: false

  notify-failure:
    if: failure()
    runs-on: ubuntu-latest
    needs: deploy-pgqd
    steps:
      - name: Notify Failure
        run: echo "❌ PGQD Deployment Failed!"
